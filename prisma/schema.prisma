generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  email      String   @unique
  firstName  String
  lastName   String
  username   String
  password   String
  entryToken String
  token      String?
  profileImg String?
  role       UserRole
  profile    Profile?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Profile {
  id          String   @id @default(uuid())
  dateOfBirth DateTime @db.Date
  phoneNumber String
  address     String
  city        String
  country     String
  zipCode     String
  user        User     @relation(fields: [userId], references: [id])
  userId      String   @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("profiles")
}

model Site {
  id            String     @id @default(uuid())
  name          String
  image         String
  businessHours OpenHours?
  rooms         Room[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("sites")
}

model Room {
  id           String     @id @default(uuid())
  name         String
  capacity     Int
  available    Boolean
  pricing      Float
  openingHours OpenHours?
  bookings     Booking[]
  site         Site?      @relation(fields: [siteId], references: [id])
  siteId       String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("rooms")
}

model Booking {
  id        String        @id @default(uuid())
  room      Room?         @relation(fields: [roomId], references: [id])
  roomId    String?
  startTime DateTime
  endTime   DateTime
  status    BookingStatus @default(AVAILABLE)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("bookings")
}

model OpenHours {
  id        String   @id @default(uuid())
  day       Weekday?
  startTime DateTime @db.Time()
  endTime   DateTime @db.Time()
  site      Site     @relation(fields: [siteId], references: [id])
  siteId    String   @unique
  room      Room     @relation(fields: [roomId], references: [id])
  roomId    String   @unique

  @@map("opening_hours")
}

enum UserRole {
  CUSTOMER
  EMPLOYEE
  SUPERVISOR
  MANAGER
  ADMIN
}

enum BookingStatus {
  AVAILABLE
  RESERVED
  PAID
}

enum Weekday {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}
